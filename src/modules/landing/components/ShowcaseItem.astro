---
import { XIcon } from "@lucide/astro";
import { Image } from "astro:assets";

import WavyUnderlineDarkBg from "../../../assets/images/common/wavy-underline-darkbg.svg";

const { key, title, description_short, description, uri } = Astro.props;
---

<li class="carousel-item">
  <dialog id=`my_modal_${key}` class="modal modal-bottom">
    <div class="modal-backdrop bg-primary/50"></div>

    <div
      class="modal-box mx-auto min-h-11/12 max-w-4xl bg-primary text-primary-content"
    >
      <form method="dialog">
        <button class="btn absolute top-5 right-5 btn-circle btn-ghost">
          <XIcon />
        </button>
      </form>

      <h3 class="mb-2 font-heading text-5xl">{title}</h3>
      <Image
        src={WavyUnderlineDarkBg}
        alt="underline for the heading"
        width={120}
        height={20}
        densities={[1, 2]}
      />

      <p class="py-4 text-xl">{description}</p>
    </div>
  </dialog>

  <div
    class="showcase-item-card card-border card h-72 w-64 border-primary/40 bg-base-200"
  >
    <div class="card-body">
      <h2 class="card-title text-2xl">{title}</h2>

      <p class="text-lg">
        {description_short}
      </p>

      <div class="card-actions justify-end">
        <button
          data-key={key}
          class="showcase-item-card-button btn btn-outline btn-sm"
        >
          View Details
        </button>
      </div>
    </div>
  </div>
</li>

<script>
  import { hover, animate, press } from "motion";

  import { getCSSVariable, isTouchDevice } from "../../common/utils";

  const showcaseItem = document.querySelectorAll(
    ".showcase-item-card",
  ) as NodeListOf<HTMLDivElement>;

  if (showcaseItem) {
    hover(showcaseItem, (element) => {
      animate(element, {
        width: "280px",
        height: "300px",
        backgroundColor: getCSSVariable("--color-primary"),
        color: getCSSVariable("--color-primary-content"),
      });

      return () => {
        animate(element, {
          width: "256px",
          height: "288px",
          backgroundColor: getCSSVariable("--color-base-200"),
          color: getCSSVariable("--color-base-content"),
        });
      };
    });

    if (isTouchDevice()) {
      press(showcaseItem, (element) => {
        animate(element, {
          width: "280px",
          height: "300px",
          backgroundColor: getCSSVariable("--color-primary"),
          color: getCSSVariable("--color-primary-content"),
        });

        return () => {
          animate(element, {
            width: "256px",
            height: "288px",
            backgroundColor: getCSSVariable("--color-base-200"),
            color: getCSSVariable("--color-base-content"),
          });
        };
      });
    }
  }

  const showcaseItemButton = document.querySelectorAll(
    ".showcase-item-card-button",
  ) as NodeListOf<HTMLButtonElement>;

  if (showcaseItemButton) {
    showcaseItemButton.forEach((button) => {
      button.addEventListener("click", () => {
        const modal = document.getElementById(
          `my_modal_${button.dataset.key}`,
        ) as HTMLDialogElement;

        modal.showModal();
      });
    });
  }
</script>
